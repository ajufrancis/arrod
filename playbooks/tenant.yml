---
# Creates tenant user and role

- hosts: openstack_controllers
  vars_files:
    - ../group_vars/all
    - vars/tenants
  tasks:
   - name: Create Tenant
     keystone_user: token={{ keystone_admin_token }} tenant={{ tenant }} tenant_description="New Tenant"

   - name: Create the user for tenant
     keystone_user: token={{ keystone_admin_token }}  user={{ tenant_user }} tenant={{ tenant }}
                    password={{ tenant_pass }}

   - name: Assign role to the created user
     keystone_user: token={{ keystone_admin_token }} role=member user={{ tenant_user }} tenant={{ tenant }}

# TODO: Add keystonerc file for created tenant
   - name: Create a network for the tenant
     quantum_network: state=present login_username={{ admin_tenant_user }} login_password={{ admin_pass }}
                      provider_network_type=gre login_tenant_name={{ admin_tenant }}
                      provider_segmentation_id={{ tunnel_id }} tenant_name={{ tenant }} name={{ network_name }}

   - name: Create a subnet for the network
     quantum_subnet: state=present login_username={{ admin_tenant_user }} login_password={{ admin_pass }}
                     login_tenant_name={{ admin_tenant }} tenant_name={{ tenant }}
                     network_name={{ network_name }} name={{ subnet_name }} cidr={{ subnet_cidr }}

   - name: Create a router for tenant
     quantum_router: state=present login_username={{ admin_tenant_user }} login_password={{ admin_pass }}
                     login_tenant_name={{ admin_tenant }} tenant_name={{ tenant }} name={{ router_name }}

   - name: Add the network interface to the router
     quantum_router_interface: state=present login_username={{ admin_tenant_user }} login_password={{ admin_pass }}
                               login_tenant_name={{ admin_tenant }} tenant_name={{ tenant }} router_name={{ router_name }}
                               subnet_name={{ subnet_name }}

   - name: Find the id for the tenant's default security group
     shell: quantum security-group-list --format=csv --quote=none --column=id
            --os-tenant-name {{ admin_tenant }} --os-username {{ admin_tenant_user }}
            --os-password {{ admin_pass }} --os-auth-url http://127.0.0.1:5000/v2.0/
            -- --tenant-name={{ tenant }} --name=default 2>/dev/null | tail -1
     register: default_sg

# TODO: Fix this - security-group-rule-create need the tenant-id 
   - name: Find tenant's id
     shell: keyston tenant-list --format=csv --quote=none --column=id
            --os-tenant-name {{ admin_tenant }} --os-username {{ admin_tenant_user }}
            --os-password {{ admin_pass }} --os-auth-url http://127.0.0.1:5000/v2.0/
     register: default_sg

   - name: Add a rule in the default security group to allow ssh in
     command: quantum security-group-rule-create {{ default_sg.stdout }} --tenant-name {{ tenant }}
              --protocol tcp --port-range-min 22 --port-range-max 22 --remote-ip-prefix 0.0.0.0/0
              --os-tenant-name {{ admin_tenant }} --os-username {{ admin_tenant_user }}
              --os-password {{ admin_pass }} --os-auth-url http://127.0.0.1:5000/v2.0/

   - name: Add a rule in the default security group to allow icmp in
     command: quantum security-group-rule-create {{ default_sg.stdout }} --tenant-name {{ tenant }}
              --protocol icmp --port-range-min 1 --port-range-max 255 --remote-ip-prefix 0.0.0.0/0
              --os-tenant-name {{ admin_tenant }} --os-username {{ admin_tenant_user }}
              --os-password {{ admin_pass }} --os-auth-url http://127.0.0.1:5000/v2.0/

